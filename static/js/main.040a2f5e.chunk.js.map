{"version":3,"sources":["TextInput/TextInput.tsx","reducer.ts","validation/validation.ts","validation/errorMessages.ts","App/formData.ts","Select/SelectField.tsx","App/countries.ts","App/nationalities.ts","App/Form.tsx","actions.ts","serviceWorker.ts","index.tsx"],"names":["TextInput","error","label","name","value","onChange","onBlur","htmlFor","type","id","defaultState","values","surname","passport","country","nationality","sex","dateOfBirth","passportExpiration","errors","formReducer","state","action","payload","fieldName","errorFieldName","validateRequired","validateMinMax","min","max","length","formData","sexOptions","SelectField","options","placeholder","optionsWithPlaceholder","e","currentTarget","map","option","isPlaceholder","key","disabled","countries","nationalities","validateName","test","validateCapitalLetter","validateLatinLetters","validatePassport","Form","useReducer","dispatch","handleFiledChange","setValue","handleFiledTouch","validation","setError","isFormValid","Object","keys","every","k","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kNAWaA,EAA6B,SAAC,GAOpC,IANLC,EAMI,EANJA,MACAC,EAKI,EALJA,MACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,SACAC,EACI,EADJA,OAEA,OACE,oCACE,2BAAOC,QAASJ,GAAOD,EAAvB,KACA,2BAAOM,KAAK,OAAOL,KAAMA,EAAMM,GAAIN,EAAMC,MAAOA,EAAOC,SAAUA,EAAUC,OAAQA,IAClFL,GAAS,2BAAOQ,GAAE,UAAKN,EAAL,WAAoBF,GACvC,+B,cCXOS,EAAsB,CACjCC,OAZ4B,CAC5BR,KAAM,GACNS,QAAS,GACTC,SAAU,GACVC,QAAS,GACTC,YAAa,GACbC,IAAK,GACLC,YAAa,GACbC,mBAAoB,IAKpBC,OAAQ,IAGGC,EAAc,SAACC,EAAcC,GACxC,OAAQA,EAAOd,MACb,IAAK,YAAL,MAC+Bc,EAAOC,QAA5BC,EADV,EACUA,UAAWpB,EADrB,EACqBA,MACnB,OAAO,eACFiB,EADL,CAEEV,OAAO,eAAMU,EAAMV,OAAb,eAAsBa,EAAYpB,MAC5C,IAAK,YAAL,MAC+CkB,EAAOC,QAAjCE,EADrB,EACUD,UAA2BvB,EADrC,EACqCA,MACnC,OAAO,eACFoB,EADL,CAEEF,OAAO,eAAME,EAAMF,OAAb,eAAsBM,EAAiBxB,MACjD,QACE,OAAOoB,ICxBAK,EAAmB,SAAItB,GAClC,OAAQA,EAA0B,GCRL,YDWlBuB,EAAiB,SAACC,EAAaC,GAAd,OAC5B,SAACzB,GACC,OAAQA,EAAM0B,OAASF,GAAOxB,EAAM0B,OAASD,ECZf,eDY2C,KEbhEE,EACA,aADAA,EAEG,YAFHA,EAGK,kBAHLA,EAIK,kBAJLA,EAKE,cALFA,EAMN,MANMA,EAOE,gBAPFA,EASG,SAGHC,EAAa,CAAC,OAAQ,SAAU,iB,OCChCC,EAA+B,SAAC,GAStC,IARLhC,EAQI,EARJA,MACAC,EAOI,EAPJA,MACAC,EAMI,EANJA,KACAE,EAKI,EALJA,SACAC,EAII,EAJJA,OACA4B,EAGI,EAHJA,QAGI,IAFJC,mBAEI,MAFU,gBAEV,EADJ/B,EACI,EADJA,MAEMgC,EAAsB,CAAID,GAAJ,mBAAoBD,IAChD,OACE,oCACE,2BAAO3B,QAASJ,GAAOD,EAAvB,KACA,4BACEE,MAAOA,GAASgC,EAAuB,GACvC/B,SAAU,SAAAgC,GAAC,OAAIhC,EAASgC,EAAEC,cAAclC,OAAS,KACjDE,OAAQ,SAAA+B,GAAC,OAAI/B,MAEZ8B,EAAuBG,KAAI,SAAAC,GAC1B,IAAMC,EAAgBD,IAAWL,EACjC,OAAO,4BAAQO,IAAG,UAAKvC,EAAL,YAAaqC,GAAUG,SAAUF,EAAerC,MAAOoC,GACtEA,OAINvC,GAAS,2BAAOQ,GAAE,UAAKN,EAAL,WAAoBF,GACvC,+BCxCO2C,EAAsB,CACjC,cACA,UACA,UACA,UACA,SACA,iBACA,YACA,UACA,YACA,UACA,aACA,UACA,UACA,aACA,WACA,UACA,UACA,SACA,QACA,SACA,UACA,qBACA,WACA,SACA,SACA,WACA,UACA,UACA,WACA,WACA,SACA,aACA,sBACA,OACA,QACA,QACA,WACA,UACA,QACA,yBACA,aACA,UACA,OACA,SACA,iBACA,UACA,WACA,WACA,qBACA,aACA,UACA,QACA,cACA,oBACA,UACA,UACA,WACA,OACA,UACA,SACA,QACA,SACA,UACA,UACA,QACA,SACA,UACA,YACA,SACA,gBACA,SACA,QACA,WACA,UACA,UACA,QACA,YACA,OACA,OACA,qBACA,SACA,QACA,cACA,UACA,QACA,SACA,aACA,QACA,WACA,cACA,cACA,SACA,SACA,aACA,OACA,SACA,UACA,UACA,UACA,QACA,gBACA,YACA,aACA,YACA,aACA,SACA,WACA,WACA,OACA,QACA,mBACA,aACA,YACA,SACA,aACA,UACA,SACA,WACA,aACA,UACA,aACA,mBACA,UACA,QACA,QACA,cACA,cACA,YACA,QACA,UACA,SACA,OACA,WACA,QACA,SACA,mBACA,WACA,OACA,cACA,SACA,WACA,QACA,UACA,qBACA,SACA,mBACA,WACA,iCACA,QACA,aACA,sBACA,eACA,UACA,SACA,aACA,eACA,YACA,WACA,WACA,kBACA,UACA,eACA,cACA,QACA,YACA,QACA,WACA,YACA,SACA,cACA,QACA,SACA,aACA,WACA,WACA,OACA,QACA,oBACA,UACA,SACA,eACA,SACA,SACA,UACA,uBACA,iBACA,gBACA,UACA,aACA,UACA,eACA,YACA,UACA,QACA,SACA,YCpMWC,EAA0B,CACrC,SACA,WACA,WACA,WACA,WACA,UACA,YACA,cACA,WACA,aACA,WACA,cACA,WACA,WACA,cACA,YACA,YACA,WACA,aACA,UACA,WACA,WACA,YACA,WACA,UACA,YACA,UACA,WACA,YACA,YACA,UACA,YACA,YACA,cACA,WACA,eACA,kBACA,UACA,UACA,UACA,YACA,UACA,YACA,cACA,WACA,QACA,UACA,QACA,SACA,WACA,YACA,QACA,WACA,aACA,gBACA,aACA,WACA,UACA,qBACA,WACA,WACA,YACA,SACA,WACA,UACA,SACA,WACA,UACA,WACA,SACA,WACA,QACA,YACA,aACA,kBACA,UACA,WACA,UACA,gBACA,WACA,YACA,aACA,YACA,SACA,aACA,UACA,QACA,QACA,UACA,UACA,UACA,WACA,WACA,YACA,cACA,SACA,uBACA,UACA,SACA,UACA,UACA,WACA,WACA,SACA,kBACA,aACA,eACA,aACA,WACA,WACA,YACA,WACA,SACA,UACA,cACA,cACA,YACA,UACA,cACA,WACA,UACA,YACA,WACA,UACA,WACA,aACA,WACA,UACA,WACA,eACA,gBACA,aACA,aACA,WACA,WACA,eACA,iBACA,YACA,QACA,YACA,UACA,aACA,oBACA,aACA,WACA,SACA,aACA,SACA,WACA,UACA,UACA,eACA,aACA,SACA,eACA,aACA,QACA,WACA,aACA,UACA,cACA,iBACA,cACA,YACA,YACA,mBACA,SACA,gBACA,eACA,UACA,aACA,WACA,YACA,QACA,UACA,QACA,SACA,YACA,QACA,YACA,OACA,WACA,SACA,4BACA,WACA,UACA,WACA,UACA,YACA,YACA,cACA,aACA,aACA,QACA,WACA,UACA,cC3LIC,EAAe,SAAC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","file":"static/js/main.040a2f5e.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  error?: string;\n  label: string;\n  name: string;\n  value: string;\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void;\n  onBlur: (e: React.FormEvent<HTMLInputElement>) => void;\n}\n\nexport const TextInput: React.FC<Props> = ({\n  error,\n  label,\n  name,\n  value,\n  onChange,\n  onBlur\n}) => {\n  return (\n    <>\n      <label htmlFor={name}>{label}:</label>\n      <input type='text' name={name} id={name} value={value} onChange={onChange} onBlur={onBlur}/>\n      {error && <label id={`${name}-error`}>{error}</label>}\n      <br/>\n    </>\n)};\n","import { Values, State, Actions } from \"./actions\";\n\nconst defaultValues: Values = {\n  name: '',\n  surname: '',\n  passport: '',\n  country: '',\n  nationality: '',\n  sex: '',\n  dateOfBirth: '',\n  passportExpiration: '' \n}\n\nexport const defaultState: State = {\n  values: defaultValues,\n  errors: {},\n}\n\nexport const formReducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case 'SET-VALUE':\n      const { fieldName, value } = action.payload;\n      return {\n        ...state,\n        values: { ...state.values, [fieldName]: value } };\n    case 'SET-ERROR':\n      const { fieldName: errorFieldName, error } = action.payload;\n      return {\n        ...state,\n        errors: { ...state.errors, [errorFieldName]: error } };\n    default:\n      return state;\n  }\n}\n","import {\n  requiredMessage,\n  wrongLengthMessage,\n  nonCapitalMessage,\n  latinLettersMessage\n} from \"./errorMessages\";\n\nexport const validateRequired = <T>(value: T): string => {\n  return !value ? requiredMessage : '';\n}\n\nexport const validateMinMax = (min: number, max: number) =>\n  (value: string): string => {\n    return (value.length < min || value.length > max) ? wrongLengthMessage : '';\n  }\n\nexport const validateCapitalLetter = (value: string) => {\n  const rule = /^[A-Z]/;\n  return rule.test(value) ? '' : nonCapitalMessage;\n}\n\nexport const validateLatinLetters = (value: string) => {\n  const rule = /^[a-zA-Z]+$/;\n  return rule.test(value) ? '' : latinLettersMessage;\n}","export const requiredMessage = 'Required';\nexport const wrongLengthMessage = 'Wrong length';\nexport const nonCapitalMessage = 'Should start from capital letter';\nexport const latinLettersMessage = 'Should contains only latin letters';","export const formData = {\n  nameLabel: 'First name',\n  surnameLabel: 'Last name',\n  passportNumber: 'Passport number',\n  issuingCountry: 'Issuing country',\n  nationality: 'Nationality',\n  sex: 'Sex',\n  dateOfBirth: 'Date of birth',\n  passportExpirationDate: 'Passport expiration date',\n  submitButton: 'Submit',\n};\n\nexport const sexOptions = ['Male', 'Female', 'Not specified'];","import React from 'react';\n\ntype Props = {\n  error?: string;\n  label: string;\n  name: string;\n  onChange: (value: string) => void;\n  onBlur: () => void;\n  options: string[];\n  placeholder?: string;\n  value: string;\n}\n\nexport const SelectField: React.FC<Props> = ({\n  error,\n  label,\n  name,\n  onChange,\n  onBlur,\n  options,\n  placeholder = 'Please Select',\n  value,\n}) => {\n  const optionsWithPlaceholder = [placeholder, ...options];\n  return (\n    <>\n      <label htmlFor={name}>{label}:</label>\n      <select\n        value={value || optionsWithPlaceholder[0]}\n        onChange={e => onChange(e.currentTarget.value || '')}\n        onBlur={e => onBlur()}\n      >\n        {optionsWithPlaceholder.map(option =>{\n          const isPlaceholder = option === placeholder;\n          return <option key={`${name}-${option}`} disabled={isPlaceholder} value={option}>\n            {option}\n          </option>;\n        })}\n      </select>\n      {error && <label id={`${name}-error`}>{error}</label>}\n      <br/>\n    </>\n)};\n","export const countries: string[] = [\n  'Afghanistan',\n  'Albania',\n  'Algeria',\n  'Andorra',\n  'Angola',\n  'Antigua & Deps',\n  'Argentina',\n  'Armenia',\n  'Australia',\n  'Austria',\n  'Azerbaijan',\n  'Bahamas',\n  'Bahrain',\n  'Bangladesh',\n  'Barbados',\n  'Belarus',\n  'Belgium',\n  'Belize',\n  'Benin',\n  'Bhutan',\n  'Bolivia',\n  'Bosnia Herzegovina',\n  'Botswana',\n  'Brazil',\n  'Brunei',\n  'Bulgaria',\n  'Burkina',\n  'Burundi',\n  'Cambodia',\n  'Cameroon',\n  'Canada',\n  'Cape Verde',\n  'Central African Rep',\n  'Chad',\n  'Chile',\n  'China',\n  'Colombia',\n  'Comoros',\n  'Congo',\n  'Congo (Democratic Rep)',\n  'Costa Rica',\n  'Croatia',\n  'Cuba',\n  'Cyprus',\n  'Czech Republic',\n  'Denmark',\n  'Djibouti',\n  'Dominica',\n  'Dominican Republic',\n  'East Timor',\n  'Ecuador',\n  'Egypt',\n  'El Salvador',\n  'Equatorial Guinea',\n  'Eritrea',\n  'Estonia',\n  'Ethiopia',\n  'Fiji',\n  'Finland',\n  'France',\n  'Gabon',\n  'Gambia',\n  'Georgia',\n  'Germany',\n  'Ghana',\n  'Greece',\n  'Grenada',\n  'Guatemala',\n  'Guinea',\n  'Guinea-Bissau',\n  'Guyana',\n  'Haiti',\n  'Honduras',\n  'Hungary',\n  'Iceland',\n  'India',\n  'Indonesia',\n  'Iran',\n  'Iraq',\n  'Ireland (Republic)',\n  'Israel',\n  'Italy',\n  'Ivory Coast',\n  'Jamaica',\n  'Japan',\n  'Jordan',\n  'Kazakhstan',\n  'Kenya',\n  'Kiribati',\n  'Korea North',\n  'Korea South',\n  'Kosovo',\n  'Kuwait',\n  'Kyrgyzstan',\n  'Laos',\n  'Latvia',\n  'Lebanon',\n  'Lesotho',\n  'Liberia',\n  'Libya',\n  'Liechtenstein',\n  'Lithuania',\n  'Luxembourg',\n  'Macedonia',\n  'Madagascar',\n  'Malawi',\n  'Malaysia',\n  'Maldives',\n  'Mali',\n  'Malta',\n  'Marshall Islands',\n  'Mauritania',\n  'Mauritius',\n  'Mexico',\n  'Micronesia',\n  'Moldova',\n  'Monaco',\n  'Mongolia',\n  'Montenegro',\n  'Morocco',\n  'Mozambique',\n  'Myanmar, (Burma)',\n  'Namibia',\n  'Nauru',\n  'Nepal',\n  'Netherlands',\n  'New Zealand',\n  'Nicaragua',\n  'Niger',\n  'Nigeria',\n  'Norway',\n  'Oman',\n  'Pakistan',\n  'Palau',\n  'Panama',\n  'Papua New Guinea',\n  'Paraguay',\n  'Peru',\n  'Philippines',\n  'Poland',\n  'Portugal',\n  'Qatar',\n  'Romania',\n  'Russian Federation',\n  'Rwanda',\n  'St Kitts & Nevis',\n  'St Lucia',\n  'Saint Vincent & the Grenadines',\n  'Samoa',\n  'San Marino',\n  'Sao Tome & Principe',\n  'Saudi Arabia',\n  'Senegal',\n  'Serbia',\n  'Seychelles',\n  'Sierra Leone',\n  'Singapore',\n  'Slovakia',\n  'Slovenia',\n  'Solomon Islands',\n  'Somalia',\n  'South Africa',\n  'South Sudan',\n  'Spain',\n  'Sri Lanka',\n  'Sudan',\n  'Suriname',\n  'Swaziland',\n  'Sweden',\n  'Switzerland',\n  'Syria',\n  'Taiwan',\n  'Tajikistan',\n  'Tanzania',\n  'Thailand',\n  'Togo',\n  'Tonga',\n  'Trinidad & Tobago',\n  'Tunisia',\n  'Turkey',\n  'Turkmenistan',\n  'Tuvalu',\n  'Uganda',\n  'Ukraine',\n  'United Arab Emirates',\n  'United Kingdom',\n  'United States',\n  'Uruguay',\n  'Uzbekistan',\n  'Vanuatu',\n  'Vatican City',\n  'Venezuela',\n  'Vietnam',\n  'Yemen',\n  'Zambia',\n  'Zimbabwe'\n];","export const nationalities: string[] = [\n  'Afghan',\n  'Albanian',\n  'Algerian',\n  'American',\n  'Andorran',\n  'Angolan',\n  'Antiguans',\n  'Argentinean',\n  'Armenian',\n  'Australian',\n  'Austrian',\n  'Azerbaijani',\n  'Bahamian',\n  'Bahraini',\n  'Bangladeshi',\n  'Barbadian',\n  'Barbudans',\n  'Batswana',\n  'Belarusian',\n  'Belgian',\n  'Belizean',\n  'Beninese',\n  'Bhutanese',\n  'Bolivian',\n  'Bosnian',\n  'Brazilian',\n  'British',\n  'Bruneian',\n  'Bulgarian',\n  'Burkinabe',\n  'Burmese',\n  'Burundian',\n  'Cambodian',\n  'Cameroonian',\n  'Canadian',\n  'Cape Verdean',\n  'Central African',\n  'Chadian',\n  'Chilean',\n  'Chinese',\n  'Colombian',\n  'Comoran',\n  'Congolese',\n  'Costa Rican',\n  'Croatian',\n  'Cuban',\n  'Cypriot',\n  'Czech',\n  'Danish',\n  'Djibouti',\n  'Dominican',\n  'Dutch',\n  'Dutchman',\n  'Dutchwoman',\n  'East Timorese',\n  'Ecuadorean',\n  'Egyptian',\n  'Emirian',\n  'Equatorial Guinean',\n  'Eritrean',\n  'Estonian',\n  'Ethiopian',\n  'Fijian',\n  'Filipino',\n  'Finnish',\n  'French',\n  'Gabonese',\n  'Gambian',\n  'Georgian',\n  'German',\n  'Ghanaian',\n  'Greek',\n  'Grenadian',\n  'Guatemalan',\n  'Guinea-Bissauan',\n  'Guinean',\n  'Guyanese',\n  'Haitian',\n  'Herzegovinian',\n  'Honduran',\n  'Hungarian',\n  'I-Kiribati',\n  'Icelander',\n  'Indian',\n  'Indonesian',\n  'Iranian',\n  'Iraqi',\n  'Irish',\n  'Israeli',\n  'Italian',\n  'Ivorian',\n  'Jamaican',\n  'Japanese',\n  'Jordanian',\n  'Kazakhstani',\n  'Kenyan',\n  'Kittian and Nevisian',\n  'Kuwaiti',\n  'Kyrgyz',\n  'Laotian',\n  'Latvian',\n  'Lebanese',\n  'Liberian',\n  'Libyan',\n  'Liechtensteiner',\n  'Lithuanian',\n  'Luxembourger',\n  'Macedonian',\n  'Malagasy',\n  'Malawian',\n  'Malaysian',\n  'Maldivan',\n  'Malian',\n  'Maltese',\n  'Marshallese',\n  'Mauritanian',\n  'Mauritian',\n  'Mexican',\n  'Micronesian',\n  'Moldovan',\n  'Monacan',\n  'Mongolian',\n  'Moroccan',\n  'Mosotho',\n  'Motswana',\n  'Mozambican',\n  'Namibian',\n  'Nauruan',\n  'Nepalese',\n  'Netherlander',\n  'New Zealander',\n  'Ni-Vanuatu',\n  'Nicaraguan',\n  'Nigerian',\n  'Nigerien',\n  'North Korean',\n  'Northern Irish',\n  'Norwegian',\n  'Omani',\n  'Pakistani',\n  'Palauan',\n  'Panamanian',\n  'Papua New Guinean',\n  'Paraguayan',\n  'Peruvian',\n  'Polish',\n  'Portuguese',\n  'Qatari',\n  'Romanian',\n  'Russian',\n  'Rwandan',\n  'Saint Lucian',\n  'Salvadoran',\n  'Samoan',\n  'San Marinese',\n  'Sao Tomean',\n  'Saudi',\n  'Scottish',\n  'Senegalese',\n  'Serbian',\n  'Seychellois',\n  'Sierra Leonean',\n  'Singaporean',\n  'Slovakian',\n  'Slovenian',\n  'Solomon Islander',\n  'Somali',\n  'South African',\n  'South Korean',\n  'Spanish',\n  'Sri Lankan',\n  'Sudanese',\n  'Surinamer',\n  'Swazi',\n  'Swedish',\n  'Swiss',\n  'Syrian',\n  'Taiwanese',\n  'Tajik',\n  'Tanzanian',\n  'Thai',\n  'Togolese',\n  'Tongan',\n  'Trinidadian or Tobagonian',\n  'Tunisian',\n  'Turkish',\n  'Tuvaluan',\n  'Ugandan',\n  'Ukrainian',\n  'Uruguayan',\n  'Uzbekistani',\n  'Venezuelan',\n  'Vietnamese',\n  'Welsh',\n  'Yemenite',\n  'Zambian',\n  'Zimbabwean',\n];","import React, { useReducer } from 'react';\nimport { TextInput } from '../TextInput/TextInput';\nimport { formReducer, defaultState } from '../reducer';\nimport { setValue, Values, setError } from '../actions';\nimport { validateRequired, validateMinMax, validateCapitalLetter, validateLatinLetters } from '../validation/validation';\nimport { formData, sexOptions } from './formData';\nimport { SelectField } from '../Select/SelectField';\nimport { countries } from './countries';\nimport { nationalities } from './nationalities';\n\nconst validateName = (value: string): string => {\n  return validateRequired(value) || validateMinMax(2, 10)(value) ||\n    validateCapitalLetter(value) || validateLatinLetters(value);\n}\n\nconst validatePassport = (value: string): string => {\n  return validateRequired(value) || validateMinMax(6, 9)(value);\n}\n\ntype Validation = (value: string) => string;\n\ntype FieldElement = HTMLInputElement | HTMLSelectElement;\n\nconst Form: React.FC = () => {\n  const [state, dispatch] = useReducer(formReducer, defaultState);\n  const { values, errors } = state;\n\n  const handleFiledChange = <T extends FieldElement>(\n    value: string,\n    fieldName: keyof Values\n  ) => {\n    dispatch(setValue(fieldName, value || ''));\n  }\n\n  const handleFiledTouch = <T extends FieldElement, V>(\n    value: string,\n    fieldName: keyof Values,\n    validation: Validation\n  ) => {\n    const error = validation(value || '');\n    dispatch(setError(fieldName, error));\n  }\n  \n  const isFormValid = (Object.keys(values) as Array<keyof typeof values>)\n    .every(k => errors[k] === '');\n\n  return (\n    <>\n      <TextInput\n        label={formData.nameLabel}\n        name='first-name'\n        value={values.name}\n        onChange={e => handleFiledChange(e.currentTarget.value, 'name')}\n        onBlur={e => handleFiledTouch(e.currentTarget.value, 'name', validateName)}\n        error={errors.name}\n      />\n      <TextInput\n        label={formData.surnameLabel}\n        name='last-name'\n        value={values.surname}\n        onChange={e => handleFiledChange(e.currentTarget.value, 'surname')}\n        onBlur={e => handleFiledTouch(e.currentTarget.value, 'surname', validateName)}\n        error={errors.surname}\n      />\n      <TextInput\n        label={formData.passportNumber}\n        name='passport'\n        value={values.passport}\n        onChange={e => handleFiledChange(e.currentTarget.value, 'passport')}\n        onBlur={e => handleFiledTouch(e.currentTarget.value, 'passport', validatePassport)}\n        error={errors.passport}\n      />\n      <SelectField\n        label={formData.issuingCountry}\n        name='country'\n        value={values.country}\n        onChange={value => handleFiledChange(value, 'country')}\n        onBlur={() => handleFiledTouch(values.country, 'country', validateRequired)}\n        options={countries}\n        error={errors.country}\n      />\n      <SelectField\n        label={formData.nationality}\n        name='nationality'\n        value={values.nationality}\n        onChange={value => handleFiledChange(value, 'nationality')}\n        onBlur={() => handleFiledTouch(values.nationality, 'nationality', validateRequired)}\n        options={nationalities}\n        error={errors.nationality}\n      />\n      <SelectField\n        label={formData.sex}\n        name='sex'\n        value={values.sex}\n        onChange={value => handleFiledChange(value, 'sex')}\n        onBlur={() => handleFiledTouch(values.sex, 'sex', validateRequired)}\n        options={sexOptions}\n        error={errors.sex}\n      />\n      <TextInput\n        label={formData.dateOfBirth}\n        name='date-of-birth'\n        value={values.dateOfBirth}\n        onChange={e => handleFiledChange(e.currentTarget.value, 'dateOfBirth')}\n        onBlur={e => handleFiledTouch(e.currentTarget.value, 'dateOfBirth', validatePassport)}\n        error={errors.dateOfBirth}\n      />\n      <TextInput\n        label={formData.dateOfBirth}\n        name='passport-expiration'\n        value={values.passportExpiration}\n        onChange={e => handleFiledChange(e.currentTarget.value, 'passportExpiration')}\n        onBlur={e => handleFiledTouch(e.currentTarget.value, 'passportExpiration', validatePassport)}\n        error={errors.passportExpiration}\n      />\n      <button type='submit' disabled={!isFormValid}>{formData.submitButton}</button>\n    </>\n  );\n}\n\nexport default Form;\n","export type Values = {\n  name: string;\n  surname: string;\n  passport: string;\n  country: string;\n  nationality: string;\n  sex: string;\n  dateOfBirth: string;\n  passportExpiration: string;\n}\n\nexport type Errors = {\n  [key in keyof Values]?: string;\n};\n\nexport type State = {\n  values: Values;\n  errors: Errors;\n}\n\ntype SetValueAction = {\n  type: 'SET-VALUE',\n  payload: { value: Values[keyof Values], fieldName: keyof Values }\n}\nexport const setValue = <T extends keyof Values>(fieldName: T, value: Values[T]): SetValueAction => ({\n  type: 'SET-VALUE',\n  payload: { fieldName, value }\n});\n\ntype SetErrorAction = {\n  type: 'SET-ERROR',\n  payload: { error: string, fieldName: keyof Values }\n}\nexport const setError = <T extends keyof Values>(fieldName: T, error: Values[T]): SetErrorAction => ({\n  type: 'SET-ERROR',\n  payload: { fieldName, error }\n});\n\n\nexport type Actions = SetErrorAction | SetValueAction;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Form from './App/Form';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Form />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}